Условие курсового проекта
ТРЕБУЕТСЯ РАЗРАБОТАТЬ САЙТ ДЛЯ РАЗМЕЩЕНИЯ 
И РЕШЕНИЯ МАТЕМАТИЧЕСКИХ ЗАДАЧ
На платформе своей специализации (Spring/Symfony или 
Laravel/ASP.NET MVC/RoR/Node.js+Express.js), 
обязательно - ORM, реляционная база данных 
(рекомендуются MySQL, ProgreSQL, SQL Server), CSS-
фреймворк (рекомеднуется Bootstrap).

Неаутентифицированным пользователи доступен только 
режим read-only (доступен поиск, недоступно создание и 
решение задач, недоступны комментарии, лайки и 
рейтинги).

Аутентифицированные пользователи имеют доступ ко 
всему, кроме админки. В базовом варианте админка 
представляет собой список пользователей (как ссылок на их 
страницы). Администратор видит каждую страницу 
пользователя и каждую задачу как ее создатель (например, 
может отредактировать или создать от имени пользователя 
с его страницы новую задачу).

Требуется поддерживать вход через социальные сети (не 
менее двух любых).

На каждой странице доступен полнотекстовый поиск по 
сайту (результаты поиска - всегда задачи, например, если 
текст найден в комментарии, что должно быть возможно, то 
выводится ссылка на задачу).

У каждого пользователя есть его личная страница, на 
которой он видит список своих задач (таблица с 
фильтраций и сортировками, возможность 
создать/удалить/редактировать задачу/открыть в режиме 
просмотра). Так же страницы содержит информацию о 
личных достижениях - числе решенных задач и числе 
созданных задач.

Каждая задача состоит из: названия, условия с поддержкой 
форматирования markdown, "тема" (из фиксированного 
набора, например, "Геометрия", "Теория чисел", "Java" и 
прочее), тэгов (вводится несколько тэгов, необходимо 
автодополнение - когда пользователь начинает вводить тэг, 
выпадает список с вариантами слов, которые уже 
вводились ранее на сайте), до трёх изображений-
иллюстраций (хранение в облаке) и до трёх вариантов 
правильного ответа(один ответ = одна строна).

Все картинки сохраняются в облаке, загружаются драг-н-
дропом.

На главной странице отображаются: последние 
добавленные задачи, задачи с самыми большими 
рейтингами, облако тэгов. (оно храниться в таблице)

При открытие задачи в режиме чтения (или другими 
пользователями) под задачей отображается поле с кнопкой 
для проверки решения, куда можно ввести строку и 
отправить на проверку (в результате проверки пользователь 
получает Alert "Неверное решение" или "Верное решение" 
соответствующего цвета и, в случае верного решения, 
задача отмечает у пользователя как решенная - решение у 
данной задачи для данного пользователя может быть 
только одно).

Каждый пользовать может проставить "рейтинг" (от 1 до 5 
звездочек) задаче (не более одного от одного пользователя 
на задачу) - средний рейтинг отображается у задачи рядом 
с названием везде на сайте.

Под любым из комментариев пользователь может 
поставить лайк или дизлайк (не более одного на 
комментарий от одного пользователя).

Сайт должен поддерживать два языка: русский и 
английский (пользователь выбирает и выбор сохраняется). 
Сайт должен поддерживать два оформления (темы): 
светлое и темное (пользователь выбирает и выбор 
сохраняется).

Обязательно: Bootstrap (или любой другой CSS-
фреймворк), поддержка разных разрешений (в том числе 
телефон), ORM для доступа к данным (Hibernate, 
ActiveRecord, другое), движок для полнотекстового поиск 
(или средствами базы, или отдельный движок - НЕ 
ПОЛНОЕ СКАНИРОВАНИЕ селектами).

Требования со звездочкой (лишь опционально, на 10/10, 
после реализации остальных требований):
* - Под задаче в режиме просмотра в конце отображаются 
комментарии. Комментарии линейные, нельзя 
комментировать комментарий, новый добавляется только 
"в хвост". Автоматическая подгрузка комментариев - если 
у меня открыта страница с комментариями и кто-то другой 
добавляет новый, он у меня автомагически появляется 
(возможна задержка в 2-5 секунд).
* - Продвинутая админка, которая позволяет позволяет 
управлять пользователями (просматривать, блокировать, 
удалять, назначать других админами).

* - Возможность загрузки произвольного числа 
иллюстраций и указания произвольного числа решений.
*** Возможно загружать решения в виде программного 
кода, который выполняется на сервере и результат 
сравнивается с ожидаемым.

ВАЖНО: не копируйте из кодо-помоек всякую фигню. 
Лучше сделайте меньше, но сами разберитесь, чтобы уметь 
ответить как на лету что-то поменять/добавить. Кураторы 
принимают огромное количество однотипных проектов и 
видели, вероятно, большинство выложенной фигни на тему.

Как всегда, можно сделать не все, но лучше разберитесь 
сами в небольшой части, чем скатайте всё у "приятеля из 
интернетов".



Условие курсового проекта
ТРЕБУЕТСЯ РАЗРАБОТАТЬ САЙТ ДЛЯ РАЗМЕЩЕНИЯ И РЕШЕНИЯ МАТЕМАТИЧЕСКИХ ЗАДАЧ
На платформе своей специализации (Spring/Symfony или Laravel/ASP.NET MVC/RoR/Node.js+Express.js), обязательно - ORM, реляционная база данных (рекомендуются MySQL, ProgreSQL, SQL Server), CSS-фреймворк (рекомеднуется Bootstrap).

Неаутентифицированным пользователи доступен только режим read-only (доступен поиск, недоступно создание и решение задач, недоступны комментарии, лайки и рейтинги).

Аутентифицированные пользователи имеют доступ ко всему, кроме админки. В базовом варианте админка представляет собой список пользователей (как ссылок на их страницы). Администратор видит каждую страницу пользователя и каждую задачу как ее создатель (например, может отредактировать или создать от имени пользователя с его страницы новую задачу).

Требуется поддерживать вход через социальные сети (не менее двух любых).

На каждой странице доступен полнотекстовый поиск по сайту (результаты поиска - всегда задачи, например, если текст найден в комментарии, что должно быть возможно, то выводится ссылка на задачу).

У каждого пользователя есть его личная страница, на которой он видит список своих задач (таблица с фильтраций и сортировками, возможность создать/удалить/редактировать задачу/открыть в режиме просмотра). Так же страницы содержит информацию о личных достижениях — числе решенных задач и числе созданных задач.

Каждая задача состоит из: названия, условия с поддержкой форматирования markdown, "тема" (из фиксированного набора, например, "Геометрия", "Теория чисел", "Java" и прочее), тэгов (вводится несколько тэгов, необходимо автодополнение - когда пользователь начинает вводить тэг, выпадает список с вариантами слов, которые уже вводились ранее на сайте), до трёх изображений-иллюстраций (хранение в облаке) и до трёх вариантов правильного ответа.

Все картинки сохраняются в облаке, загружаются драг-н-дропом.

На главной странице отображаются: последние добавленные задачи, задачи с самыми большими рейтингами, облако тэгов.

При открытие задачи в режиме чтения (или другими пользователями) под задачей отображается поле с кнопкой для проверки решения, куда можно ввести строку и отправить на проверку (в результате проверки пользователь получает Alert "Неверное решение" или "Верное решение" соответствующего цвета и, в случае верного решения, задача отмечает у пользователя как решенная - решение у данной задачи для данного пользователя может быть только одно).

Каждый пользовать может проставить "рейтинг" (от 1 до 5 звездочек) задаче (не более одного от одного пользователя на задачу) — средний рейтинг отображается у задачи рядом с названием везде на сайте.

Под любым из комментариев пользователь может поставить лайк или дизлайк (не более одного на комментарий от одного пользователя).

Сайт должен поддерживать два языка: русский и английский (пользователь выбирает и выбор сохраняется). Сайт должен поддерживать два оформления (темы): светлое и темное (пользователь выбирает и выбор сохраняется).

Обязательно: Bootstrap (или любой другой CSS-фреймворк), поддержка разных разрешений (в том числе телефон), ORM для доступа к данным (Hibernate, ActiveRecord, другое), движок для полнотекстового поиск (или средствами базы, или отдельный движок — НЕ ПОЛНОЕ СКАНИРОВАНИЕ селектами).

Требования со звездочкой (лишь опционально, на 10/10, после реализации остальных требований):
* - Под задаче в режиме просмотра в конце отображаются комментарии. Комментарии линейные, нельзя комментировать комментарий, новый добавляется только "в хвост". Автоматическая подгрузка комментариев — если у меня открыта страница с комментариями и кто-то другой добавляет новый, он у меня автомагически появляется (возможна задержка в 2-5 секунд).
* - Продвинутая админка, которая позволяет позволяет управлять пользователями (просматривать, блокировать, удалять, назначать других админами).

* - Возможность загрузки произвольного числа иллюстраций и указания произвольного числа решений.
*** Возможно загружать решения в виде программного кода, который выполняется на сервере и результат сравнивается с ожидаемым.

ВАЖНО: не копируйте из кодо-помоек всякую фигню. Лучше сделайте меньше, но сами разберитесь, чтобы уметь ответить как на лету что-то поменять/добавить. Кураторы принимают огромное количество однотипных проектов и видели, вероятно, большинство выложенной фигни на тему.

Как всегда, можно сделать не все, но лучше разберитесь сами в небольшой части, чем скатайте всё у "приятеля из интернетов".


